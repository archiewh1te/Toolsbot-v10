from aiogram import types
from loader import dp
from aiogram.dispatcher.filters import Text
from aiogram.dispatcher import FSMContext
import requests
import folium

from keyboards.default import kb_menu, kb_back
from utils.misc import rate_limit



@dp.message_handler(text='‚¨Ö–ù–∞–∑–∞–¥', state='infoip')
async def quit(message: types.Message, state: FSMContext):
    await state.finish()
    await message.answer('–î–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–Ω–æ–ø–∫–∞–º–∏ –º–µ–Ω—é', reply_markup=kb_menu)


@rate_limit(limit=5)
@dp.message_handler(Text(equals="üìÑ–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± IP"))
async def search_info(message: types.Message, state: FSMContext):
    await message.reply(f'–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –≤–≤–µ–¥–∏—Ç–µ IP: ', reply_markup=kb_back)
    await state.set_state("infoip")  # --- –Ω–∞–∑–Ω–∞—á–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ


@dp.message_handler(state="infoip")  # ---- –ø–æ–ª—É—á–∞–µ–º —Å—Ç–µ–π—Ç infoip(–∫–æ—Ç–æ—Ä—ã–π –Ω–∞–∑–∞–Ω–∞—á–µ–Ω –≤—ã—à–µ)
async def get_ip(message: types.Message, state: FSMContext, ):
    try:
        ip = message.text
        response = requests.get(url=f'http://ip-api.com/json/{ip}').json()

        data = {
            '[IP]': response.get('query'),
            '[Provider]': response.get('isp'),
            '[Org]': response.get('org'),
            '[–°—Ç—Ä–∞–Ω–∞]': response.get('country'),
            '[–†–µ–≥–∏–æ–Ω]': response.get('regionName'),
            '[–ì–æ—Ä–æ–¥]': response.get('city'),
            '[–ü–æ—á—Ç–∞]': response.get('zip'),
            '[–®–∏—Ä–æ—Ç–∞]': response.get('lat'),
            '[–î–æ–ª–≥–æ—Ç–∞]': response.get('lon'),
        }

        query_IP = data['[IP]']
        provider = data['[Provider]']
        Org = data['[Org]']
        country = data['[–°—Ç—Ä–∞–Ω–∞]']
        regionName = data['[–†–µ–≥–∏–æ–Ω]']
        city = data['[–ì–æ—Ä–æ–¥]']
        zips = data['[–ü–æ—á—Ç–∞]']
        lat = data['[–®–∏—Ä–æ—Ç–∞]']
        lon = data['[–î–æ–ª–≥–æ—Ç–∞]']

        await message.reply(f"IP: {query_IP}\n"
                            f"Provider: {provider}\n"
                            f"Org: {Org}\n"
                            f"–°—Ç—Ä–∞–Ω–∞: {country}\n"
                            f"–†–µ–≥–∏–æ–Ω: {regionName}\n"
                            f"–ì–æ—Ä–æ–¥: {city}\n"
                            f"–ü–æ—á—Ç–∞: {zips}\n"
                            f"–®–∏—Ä–æ—Ç–∞: {lat}\n"
                            f"–î–æ–ª–≥–æ—Ç–∞: {lon}", reply_markup=kb_menu)



        area = folium.Map(location=[response.get('lat'), response.get('lon')])
        area.save(f'location/{response.get("query")}_{response.get("city")}.html')

        await state.finish()


    except requests.exceptions.ConnectionError:
       await message.reply('[!] –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≤–∞—à–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ')


